{"ast":null,"code":"import { useState, useRef, useEffect, useLayoutEffect, useCallback, useMemo, createElement, createContext, useContext } from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar id = 0;\n\nfunction generateId() {\n  return ++id;\n}\n\nfunction useId() {\n  var _React$useState = useState(generateId),\n      id = _React$useState[0];\n\n  return id;\n}\n\nfunction useIsInitialRender() {\n  var initial = useRef(true);\n  useEffect(function () {\n    initial.current = false;\n  }, []);\n  return initial.current;\n}\n\nfunction useIsMounted() {\n  var mounted = useRef(true);\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return mounted;\n}\n\nvar useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction match(value, lookup) {\n  if (value in lookup) {\n    var returnValue = lookup[value];\n    return typeof returnValue === 'function' ? returnValue() : returnValue;\n  }\n\n  var error = new Error(\"Tried to handle \\\"\" + value + \"\\\" but there is no handler defined. Only defined handlers are: \" + Object.keys(lookup).map(function (key) {\n    return \"\\\"\" + key + \"\\\"\";\n  }).join(', ') + \".\");\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, match);\n  }\n\n  throw error;\n}\n\nfunction once(cb) {\n  var state = {\n    called: false\n  };\n  return function () {\n    if (state.called) {\n      return;\n    }\n\n    state.called = true;\n    return cb.apply(void 0, arguments);\n  };\n}\n\nfunction disposables() {\n  var disposables = [];\n  var api = {\n    requestAnimationFrame: function (_requestAnimationFrame) {\n      function requestAnimationFrame() {\n        return _requestAnimationFrame.apply(this, arguments);\n      }\n\n      requestAnimationFrame.toString = function () {\n        return _requestAnimationFrame.toString();\n      };\n\n      return requestAnimationFrame;\n    }(function () {\n      var raf = requestAnimationFrame.apply(void 0, arguments);\n      api.add(function () {\n        return cancelAnimationFrame(raf);\n      });\n    }),\n    nextFrame: function nextFrame() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      api.requestAnimationFrame(function () {\n        api.requestAnimationFrame.apply(api, args);\n      });\n    },\n    setTimeout: function (_setTimeout) {\n      function setTimeout() {\n        return _setTimeout.apply(this, arguments);\n      }\n\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n\n      return setTimeout;\n    }(function () {\n      var timer = setTimeout.apply(void 0, arguments);\n      api.add(function () {\n        return clearTimeout(timer);\n      });\n    }),\n    add: function add(cb) {\n      disposables.push(cb);\n    },\n    dispose: function dispose() {\n      disposables.splice(0).forEach(function (dispose) {\n        return dispose();\n      });\n    }\n  };\n  return api;\n}\n\nfunction addClasses(node) {\n  var _node$classList;\n\n  for (var _len = arguments.length, classes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    classes[_key - 1] = arguments[_key];\n  }\n\n  node && classes.length > 0 && (_node$classList = node.classList).add.apply(_node$classList, classes);\n}\n\nfunction removeClasses(node) {\n  var _node$classList2;\n\n  for (var _len2 = arguments.length, classes = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    classes[_key2 - 1] = arguments[_key2];\n  }\n\n  node && classes.length > 0 && (_node$classList2 = node.classList).remove.apply(_node$classList2, classes);\n}\n\nvar Reason;\n\n(function (Reason) {\n  Reason[\"Finished\"] = \"finished\";\n  Reason[\"Cancelled\"] = \"cancelled\";\n})(Reason || (Reason = {}));\n\nfunction waitForTransition(node, done) {\n  var d = disposables();\n  if (!node) return d.dispose; // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n\n  var _getComputedStyle = getComputedStyle(node),\n      transitionDuration = _getComputedStyle.transitionDuration,\n      transitionDelay = _getComputedStyle.transitionDelay;\n\n  var _map = [transitionDuration, transitionDelay].map(function (value) {\n    var _value$split$filter$m = value.split(',') // Remove falseys we can't work with\n    .filter(Boolean) // Values are returned as `0.3s` or `75ms`\n    .map(function (v) {\n      return v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000;\n    }).sort(function (a, z) {\n      return z - a;\n    }),\n        _value$split$filter$m2 = _value$split$filter$m[0],\n        resolvedValue = _value$split$filter$m2 === void 0 ? 0 : _value$split$filter$m2;\n\n    return resolvedValue;\n  }),\n      durationMs = _map[0],\n      delaysMs = _map[1]; // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n\n\n  if (durationMs !== 0) {\n    d.setTimeout(function () {\n      done(Reason.Finished);\n    }, durationMs + delaysMs);\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished);\n  } // If we get disposed before the timeout runs we should cleanup anyway\n\n\n  d.add(function () {\n    return done(Reason.Cancelled);\n  });\n  return d.dispose;\n}\n\nfunction transition(node, base, from, to, done) {\n  var d = disposables();\n\n  var _done = done !== undefined ? once(done) : function () {};\n\n  addClasses.apply(void 0, [node].concat(base, from));\n  d.nextFrame(function () {\n    removeClasses.apply(void 0, [node].concat(from));\n    addClasses.apply(void 0, [node].concat(to));\n    d.add(waitForTransition(node, function (reason) {\n      removeClasses.apply(void 0, [node].concat(to, base));\n      return _done(reason);\n    }));\n  }); // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n\n  d.add(function () {\n    return removeClasses.apply(void 0, [node].concat(base, from, to));\n  }); // When we get disposed early, than we should also call the done method but switch the reason.\n\n  d.add(function () {\n    return _done(Reason.Cancelled);\n  });\n  return d.dispose;\n}\n\nfunction useSplitClasses(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n\n  return useMemo(function () {\n    return classes.split(' ').filter(function (className) {\n      return className.trim().length > 1;\n    });\n  }, [classes]);\n}\n\nvar TransitionContext = /*#__PURE__*/createContext(null);\nvar TreeStates;\n\n(function (TreeStates) {\n  TreeStates[\"Visible\"] = \"visible\";\n  TreeStates[\"Hidden\"] = \"hidden\";\n})(TreeStates || (TreeStates = {}));\n\nfunction useTransitionContext() {\n  var context = useContext(TransitionContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.');\n  }\n\n  return context;\n}\n\nfunction useParentNesting() {\n  var context = useContext(NestingContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.');\n  }\n\n  return context;\n}\n\nvar NestingContext = /*#__PURE__*/createContext(null);\n\nfunction useNesting(done) {\n  var transitionableChildren = useRef([]);\n  var mounted = useIsMounted();\n  var unregister = useCallback(function (childId) {\n    var idx = transitionableChildren.current.indexOf(childId);\n    if (idx === -1) return;\n    transitionableChildren.current.splice(idx, 1);\n\n    if (transitionableChildren.current.length <= 0 && mounted.current) {\n      done === null || done === void 0 ? void 0 : done();\n    }\n  }, [done, mounted, transitionableChildren]);\n  var register = useCallback(function (childId) {\n    transitionableChildren.current.push(childId);\n    return function () {\n      return unregister(childId);\n    };\n  }, [transitionableChildren, unregister]);\n  return useMemo(function () {\n    return {\n      children: transitionableChildren,\n      register: register,\n      unregister: unregister\n    };\n  }, [register, unregister, transitionableChildren]);\n}\n\nfunction TransitionChild(props) {\n  var children = props.children,\n      enter = props.enter,\n      enterFrom = props.enterFrom,\n      enterTo = props.enterTo,\n      leave = props.leave,\n      leaveFrom = props.leaveFrom,\n      leaveTo = props.leaveTo,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"enter\", \"enterFrom\", \"enterTo\", \"leave\", \"leaveFrom\", \"leaveTo\"]);\n\n  var container = useRef(null);\n\n  var _React$useState = useState(TreeStates.Visible),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var _useTransitionContext = useTransitionContext(),\n      show = _useTransitionContext.show,\n      appear = _useTransitionContext.appear;\n\n  var _useParentNesting = useParentNesting(),\n      register = _useParentNesting.register,\n      unregister = _useParentNesting.unregister;\n\n  var initial = useIsInitialRender();\n  var id = useId();\n  var isTransitioning = useRef(false);\n  var nesting = useNesting(useCallback(function () {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourserlves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden);\n      unregister(id);\n    }\n  }, [id, unregister, isTransitioning]));\n  useIsoMorphicEffect(function () {\n    return register(id);\n  }, [register, id]);\n  var enterClasses = useSplitClasses(enter);\n  var enterFromClasses = useSplitClasses(enterFrom);\n  var enterToClasses = useSplitClasses(enterTo);\n  var leaveClasses = useSplitClasses(leave);\n  var leaveFromClasses = useSplitClasses(leaveFrom);\n  var leaveToClasses = useSplitClasses(leaveTo);\n  useEffect(function () {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?');\n    }\n  }, [container, state]);\n  useIsoMorphicEffect(function () {\n    var node = container.current;\n    if (!node) return; // Skipping initial transition\n\n    if (initial && !appear) return;\n    isTransitioning.current = true;\n    return show ? transition(node, enterClasses, enterFromClasses, enterToClasses, function () {\n      isTransitioning.current = false;\n    }) : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason !== Reason.Finished) return; // When we don't have children anymore we can safely unregister from the parent and hide\n      // ourselves.\n\n      if (nesting.children.current.length <= 0) {\n        setState(TreeStates.Hidden);\n        unregister(id);\n      }\n    });\n  }, [id, isTransitioning, unregister, nesting, container, initial, appear, show, enterClasses, enterFromClasses, enterToClasses, leaveClasses, leaveFromClasses, leaveToClasses]); // Unmount the whole tree\n\n  if (state === TreeStates.Hidden) return null;\n\n  if (typeof children === 'function') {\n    return createElement(NestingContext.Provider, {\n      value: nesting\n    }, children(container));\n  }\n\n  var _rest$as = rest.as,\n      Component = _rest$as === void 0 ? 'div' : _rest$as,\n      passthroughProps = _objectWithoutPropertiesLoose(rest, [\"as\"]);\n\n  return createElement(NestingContext.Provider, {\n    value: nesting\n  }, createElement(Component, Object.assign({}, passthroughProps, {\n    ref: container\n  }), children));\n}\n\nfunction Transition(props) {\n  var _match;\n\n  var show = props.show,\n      _props$appear = props.appear,\n      appear = _props$appear === void 0 ? false : _props$appear,\n      rest = _objectWithoutPropertiesLoose(props, [\"show\", \"appear\"]);\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.');\n  }\n\n  var _React$useState2 = useState(show ? TreeStates.Visible : TreeStates.Hidden),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var nestingBag = useNesting(useCallback(function () {\n    setState(TreeStates.Hidden);\n  }, []));\n  var initial = useIsInitialRender();\n  var transitionBag = useMemo(function () {\n    return {\n      show: show,\n      appear: appear || !initial\n    };\n  }, [show, appear, initial]);\n  useEffect(function () {\n    if (show) {\n      setState(TreeStates.Visible);\n    } else if (nestingBag.children.current.length <= 0) {\n      setState(TreeStates.Hidden);\n    }\n  }, [show, nestingBag]);\n  return createElement(NestingContext.Provider, {\n    value: nestingBag\n  }, createElement(TransitionContext.Provider, {\n    value: transitionBag\n  }, match(state, (_match = {}, _match[TreeStates.Visible] = function () {\n    return createElement(TransitionChild, Object.assign({}, rest));\n  }, _match[TreeStates.Hidden] = null, _match))));\n}\n\nTransition.Child = TransitionChild;\nexport { Transition };","map":{"version":3,"sources":["../src/hooks/use-id.ts","../src/hooks/use-is-initial-render.ts","../src/hooks/use-is-mounted.ts","../src/hooks/use-iso-morphic-effect.ts","../src/utils/match.ts","../src/utils/once.ts","../src/utils/disposables.ts","../src/components/transitions/utils/transition.ts","../src/components/transitions/transition.tsx"],"names":["id","useId","React","useIsInitialRender","initial","useIsMounted","mounted","useIsoMorphicEffect","match","value","lookup","returnValue","error","Error","once","cb","state","called","disposables","api","requestAnimationFrame","raf","cancelAnimationFrame","nextFrame","args","setTimeout","timer","clearTimeout","add","dispose","classes","node","Reason","d","transitionDuration","transitionDelay","getComputedStyle","durationMs","delaysMs","resolvedValue","v","parseFloat","z","done","transition","base","from","to","_done","addClasses","removeClasses","waitForTransition","className","TransitionContext","TreeStates","context","NestingContext","transitionableChildren","unregister","idx","register","children","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","rest","props","container","setState","show","appear","useTransitionContext","useParentNesting","isTransitioning","nesting","useNesting","enterClasses","useSplitClasses","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","reason","as","Component","passthroughProps","ref","Transition","nestingBag","transitionBag"],"mappings":";;;;;;;;;;;;;;;;;AAEA,IAAIA,EAAE,GAAN,CAAA;;AACA,SAAA,UAAA,GAAA;AACE,SAAO,EAAP,EAAA;AACD;;SAEeC,K,GAAAA;wBACDC,QAAAA,CAAAA,UAAAA,C;MAANF,EAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;;AACP,SAAA,EAAA;AACD;;SCReG,kB,GAAAA;AACd,MAAMC,OAAO,GAAGF,MAAAA,CAAhB,IAAgBA,CAAhB;AAEAA,EAAAA,SAAAA,CAAgB,YAAA;AACdE,IAAAA,OAAO,CAAPA,OAAAA,GAAAA,KAAAA;AADFF,GAAAA,EAAAA,EAAAA,CAAAA;AAIA,SAAOE,OAAO,CAAd,OAAA;AACD;;SCReC,Y,GAAAA;AACd,MAAMC,OAAO,GAAGJ,MAAAA,CAAhB,IAAgBA,CAAhB;AAEAA,EAAAA,SAAAA,CAAgB,YAAA;AACd,WAAO,YAAA;AACLI,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,KAAAA;AADF,KAAA;AADFJ,GAAAA,EAAAA,EAAAA,CAAAA;AAMA,SAAA,OAAA;AACD;;ACVM,IAAMK,mBAAmB,GAC9B,OAAA,MAAA,KAAA,WAAA,GAAA,eAAA,GADK,SAAA;;SCFSC,K,CACdC,K,EACAC,M,EAAAA;AAEA,MAAID,KAAK,IAAT,MAAA,EAAqB;AACnB,QAAME,WAAW,GAAGD,MAAM,CAA1B,KAA0B,CAA1B;AACA,WAAO,OAAA,WAAA,KAAA,UAAA,GAAoCC,WAApC,EAAA,GAAP,WAAA;AACD;;AAED,MAAMC,KAAK,GAAG,IAAA,KAAA,CAAA,uBAAA,KAAA,GAAA,iEAAA,GAC8E,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,GAAA,CAGnF,UAAA,GAAA,EAAG;AAAA,WAAA,OAAA,GAAA,GAAA,IAAA;AAHgF,GAAA,EAAA,IAAA,CAD9E,IAC8E,CAD9E,GAAd,GAAc,CAAd;;AAQA,MAAIC,KAAK,CAAT,iBAAA,EAA6B;AAC3BA,IAAAA,KAAK,CAALA,iBAAAA,CAAAA,KAAAA,EAAAA,KAAAA;AACD;;AAED,QAAA,KAAA;AACD;;SCtBeC,I,CAAQC,E,EAAAA;AACtB,MAAMC,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAd;AAEA,SAAO,YAAA;AACL,QAAID,KAAK,CAAT,MAAA,EAAkB;AAChB;AACD;;AACDA,IAAAA,KAAK,CAALA,MAAAA,GAAAA,IAAAA;AACA,WAAOD,EAAE,CAAFA,KAAAA,CAAAA,KAAAA,CAAAA,EAAP,SAAOA,CAAP;AALF,GAAA;AAOD;;SCReG,W,GAAAA;AACd,MAAMA,WAAW,GAAjB,EAAA;AAEA,MAAMC,GAAG,GAAG;AACVC,IAAAA,qBADU,EAAA,UAAA,sBAAA,EAAA;AAAA,eAAA,qBAAA,GAAA;AAAA,eAAA,sBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;AAAA,MAAA,qBAAA,CAAA,QAAA,GAAA,YAAA;AAAA,eAAA,sBAAA,CAAA,QAAA,EAAA;AAAA,OAAA;;AAAA,aAAA,qBAAA;AAAA,KAAA,CAAA,YAAA;AAER,UAAMC,GAAG,GAAGD,qBAAqB,CAArBA,KAAAA,CAAAA,KAAAA,CAAAA,EAAZ,SAAYA,CAAZ;AACAD,MAAAA,GAAG,CAAHA,GAAAA,CAAQ,YAAA;AAAA,eAAMG,oBAAoB,CAA1B,GAA0B,CAA1B;AAARH,OAAAA;AAHQ,KAAA,CAAA;AAMVI,IAAAA,SANU,EAAA,SAAA,SAAA,GAAA;wCAMGC,IAAAA,GAAAA,IAAAA,KAAAA,CAAAA,IAAAA,C,EAAAA,IAAAA,GAAAA,C,EAAAA,IAAAA,GAAAA,I,EAAAA,IAAAA,E,EAAAA;AAAAA,QAAAA,IAAAA,CAAAA,IAAAA,CAAAA,GAAAA,SAAAA,CAAAA,IAAAA,CAAAA;;;AACXL,MAAAA,GAAG,CAAHA,qBAAAA,CAA0B,YAAA;AACxBA,QAAAA,GAAG,CAAHA,qBAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,IAAAA;AADFA,OAAAA;AAPQ,KAAA;AAYVM,IAAAA,UAZU,EAAA,UAAA,WAAA,EAAA;AAAA,eAAA,UAAA,GAAA;AAAA,eAAA,WAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;AAAA,MAAA,UAAA,CAAA,QAAA,GAAA,YAAA;AAAA,eAAA,WAAA,CAAA,QAAA,EAAA;AAAA,OAAA;;AAAA,aAAA,UAAA;AAAA,KAAA,CAAA,YAAA;AAaR,UAAMC,KAAK,GAAGD,UAAU,CAAVA,KAAAA,CAAAA,KAAAA,CAAAA,EAAd,SAAcA,CAAd;AACAN,MAAAA,GAAG,CAAHA,GAAAA,CAAQ,YAAA;AAAA,eAAMQ,YAAY,CAAlB,KAAkB,CAAlB;AAARR,OAAAA;AAdQ,KAAA,CAAA;AAiBVS,IAAAA,GAjBU,EAAA,SAAA,GAAA,CAAA,EAAA,EAAA;AAkBRV,MAAAA,WAAW,CAAXA,IAAAA,CAAAA,EAAAA;AAlBQ,KAAA;AAqBVW,IAAAA,OArBU,EAAA,SAAA,OAAA,GAAA;AAsBRX,MAAAA,WAAW,CAAXA,MAAAA,CAAAA,CAAAA,EAAAA,OAAAA,CAA8B,UAAA,OAAA,EAAO;AAAA,eAAIW,OAAJ,EAAA;AAArCX,OAAAA;AACD;AAvBS,GAAZ;AA0BA,SAAA,GAAA;AACD;;AC7BD,SAAA,UAAA,CAAA,IAAA,EAAA;;;oCAA0CY,OAAAA,GAAAA,IAAAA,KAAAA,CAAAA,IAAAA,GAAAA,CAAAA,GAAAA,IAAAA,GAAAA,CAAAA,GAAAA,CAAAA,C,EAAAA,IAAAA,GAAAA,C,EAAAA,IAAAA,GAAAA,I,EAAAA,IAAAA,E,EAAAA;AAAAA,IAAAA,OAAAA,CAAAA,IAAAA,GAAAA,CAAAA,CAAAA,GAAAA,SAAAA,CAAAA,IAAAA,CAAAA;;;AACxCC,EAAAA,IAAI,IAAID,OAAO,CAAPA,MAAAA,GAARC,CAAAA,IAA8B,CAAA,eAAA,GAAA,IAAI,CAAJ,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,eAAA,EAA9BA,OAA8B,CAA9BA;AACD;;AAED,SAAA,aAAA,CAAA,IAAA,EAAA;;;qCAA6CD,OAAAA,GAAAA,IAAAA,KAAAA,CAAAA,KAAAA,GAAAA,CAAAA,GAAAA,KAAAA,GAAAA,CAAAA,GAAAA,CAAAA,C,EAAAA,KAAAA,GAAAA,C,EAAAA,KAAAA,GAAAA,K,EAAAA,KAAAA,E,EAAAA;AAAAA,IAAAA,OAAAA,CAAAA,KAAAA,GAAAA,CAAAA,CAAAA,GAAAA,SAAAA,CAAAA,KAAAA,CAAAA;;;AAC3CC,EAAAA,IAAI,IAAID,OAAO,CAAPA,MAAAA,GAARC,CAAAA,IAA8B,CAAA,gBAAA,GAAA,IAAI,CAAJ,SAAA,EAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,EAA9BA,OAA8B,CAA9BA;AACD;;AAED,IAAA,MAAA;;AAAA,CAAA,UAAYC,MAAZ,EAAYA;AACVA,EAAAA,MAAAA,CAAAA,UAAAA,CAAAA,GAAAA,UAAAA;AACAA,EAAAA,MAAAA,CAAAA,WAAAA,CAAAA,GAAAA,WAAAA;AAFF,CAAA,EAAYA,MAAM,KAANA,MAAM,GAAlB,EAAkB,CAAlB;;AAKA,SAAA,iBAAA,CAAA,IAAA,EAAA,IAAA,EAAA;AACE,MAAMC,CAAC,GAAGf,WAAV,EAAA;AAEA,MAAI,CAAJ,IAAA,EAAW,OAAOe,CAAC,CAAR,OAAA,CAHb,CAGa;;0BAGqCG,gBAAgB,CAAA,IAAA,C;MAAxDF,kBAAAA,GAAAA,iBAAAA,CAAAA,kB;MAAoBC,eAAAA,GAAAA,iBAAAA,CAAAA,e;;aAEG,CAAA,kBAAA,EAAA,eAAA,EAAA,GAAA,CAA0C,UAAA,KAAA,EAAK;gCAChD,KAAK,CAAL,KAAA,CAAA,GAAA,EAAA;AAAA,KAAA,MAAA,CAAA,OAAA,EAAA;AAAA,KAAA,GAAA,CAKrB,UAAA,CAAA,EAAC;AAAA,aAAKK,CAAC,CAADA,QAAAA,CAAAA,IAAAA,IAAmBC,UAAU,CAA7BD,CAA6B,CAA7BA,GAAmCC,UAAU,CAAVA,CAAU,CAAVA,GAAxC,IAAA;AALoB,KAAA,EAAA,IAAA,CAMpB,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,aAAUC,CAAC,GAAX,CAAA;AANoB,KAAA,C;;QAArBH,aAAAA,GAAAA,sBAAAA,KAAAA,KAAAA,CAAAA,GAAgB,CAAhBA,GAAgB,sB;;AAQvB,WAAA,aAAA;AAT6B,GAAA,C;MAAxBF,UAAAA,GAAAA,IAAAA,CAAAA,CAAAA,C;MAAYC,QAAAA,GAAAA,IAAAA,CAAAA,CAAAA,C,CARrB,CAQqBA;AAanB;AACA;AACA;AACA;;;AACA,MAAID,UAAU,KAAd,CAAA,EAAsB;AACpBJ,IAAAA,CAAC,CAADA,UAAAA,CAAa,YAAA;AACXU,MAAAA,IAAI,CAACX,MAAM,CAAXW,QAAI,CAAJA;AADFV,KAAAA,EAEGI,UAAU,GAFbJ,QAAAA;AADF,GAAA,MAIO;AACL;AACA;AACAU,IAAAA,IAAI,CAACX,MAAM,CAAXW,QAAI,CAAJA;AACD,GAjCH,CAiCG;;;AAGDV,EAAAA,CAAC,CAADA,GAAAA,CAAM,YAAA;AAAA,WAAMU,IAAI,CAACX,MAAM,CAAjB,SAAU,CAAV;AAANC,GAAAA;AAEA,SAAOA,CAAC,CAAR,OAAA;AACD;;AAED,SAAgBW,UAAhB,CACEb,IADF,EAEEc,IAFF,EAGEC,IAHF,EAIEC,EAJF,EAKEJ,IALF,EAKEA;AAEA,MAAMV,CAAC,GAAGf,WAAV,EAAA;;AACA,MAAM8B,KAAK,GAAGL,IAAI,KAAJA,SAAAA,GAAqB7B,IAAI,CAAzB6B,IAAyB,CAAzBA,GAAkC,YAAA,CAAhD,CAAA;;AAEAM,EAAAA,UAAU,CAAVA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAAAA;AAEAhB,EAAAA,CAAC,CAADA,SAAAA,CAAY,YAAA;AACViB,IAAAA,aAAa,CAAbA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,IAAAA,CAAAA;AACAD,IAAAA,UAAU,CAAVA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA;AAEAhB,IAAAA,CAAC,CAADA,GAAAA,CACEkB,iBAAiB,CAAA,IAAA,EAAO,UAAA,MAAA,EAAM;AAC5BD,MAAAA,aAAa,CAAbA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA;AACA,aAAOF,KAAK,CAAZ,MAAY,CAAZ;AAHJf,KACmB,CADnBA;AAJFA,GAAAA,EAPAU,CAOAV;AAaA;AACA;AACA;;AACAA,EAAAA,CAAC,CAADA,GAAAA,CAAM,YAAA;AAAA,WAAMiB,aAAa,CAAbA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAN,EAAMA,CAAAA,CAAN;AAANjB,GAAAA,EAvBAU,CAuBAV;;AAGAA,EAAAA,CAAC,CAADA,GAAAA,CAAM,YAAA;AAAA,WAAMe,KAAK,CAAChB,MAAM,CAAlB,SAAW,CAAX;AAANC,GAAAA;AAEA,SAAOA,CAAC,CAAR,OAAA;AACD;;AC/ED,SAAA,eAAA,CAAA,OAAA,EAAA;MAAyBH,OAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,OAAAA,GAAkB,EAAlBA;;;AACvB,SAAO,OAAA,CAAc,YAAA;AAAA,WAAM,OAAO,CAAP,KAAA,CAAA,GAAA,EAAA,MAAA,CAA0B,UAAA,SAAA,EAAS;AAAA,aAAIsB,SAAS,CAATA,IAAAA,GAAAA,MAAAA,GAAJ,CAAA;AAAzC,KAAM,CAAN;AAAd,GAAA,EAAyF,CAAhG,OAAgG,CAAzF,CAAP;AAGD;;AAMD,IAAMC,iBAAiB,GAAA,aAAGnD,aAAAA,CAA1B,IAA0BA,CAA1B;AAEA,IAAA,UAAA;;AAAA,CAAA,UAAKoD,UAAL,EAAKA;AACHA,EAAAA,UAAAA,CAAAA,SAAAA,CAAAA,GAAAA,SAAAA;AACAA,EAAAA,UAAAA,CAAAA,QAAAA,CAAAA,GAAAA,QAAAA;AAFF,CAAA,EAAKA,UAAU,KAAVA,UAAU,GAAf,EAAe,CAAf;;AAgCA,SAAA,oBAAA,GAAA;AACE,MAAMC,OAAO,GAAGrD,UAAAA,CAAhB,iBAAgBA,CAAhB;;AAEA,MAAIqD,OAAO,KAAX,IAAA,EAAsB;AACpB,UAAM,IAAA,KAAA,CAAN,2EAAM,CAAN;AACD;;AAED,SAAA,OAAA;AACD;;AAED,SAAA,gBAAA,GAAA;AACE,MAAMA,OAAO,GAAGrD,UAAAA,CAAhB,cAAgBA,CAAhB;;AAEA,MAAIqD,OAAO,KAAX,IAAA,EAAsB;AACpB,UAAM,IAAA,KAAA,CAAN,2EAAM,CAAN;AACD;;AAED,SAAA,OAAA;AACD;;AAQD,IAAMC,cAAc,GAAA,aAAGtD,aAAAA,CAAvB,IAAuBA,CAAvB;;AAEA,SAAA,UAAA,CAAA,IAAA,EAAA;AACE,MAAMuD,sBAAsB,GAAGvD,MAAAA,CAA/B,EAA+BA,CAA/B;AACA,MAAMI,OAAO,GAAGD,YAAhB,EAAA;AAEA,MAAMqD,UAAU,GAAG,WAAA,CACjB,UAAA,OAAA,EAAA;AACE,QAAMC,GAAG,GAAGF,sBAAsB,CAAtBA,OAAAA,CAAAA,OAAAA,CAAZ,OAAYA,CAAZ;AAEA,QAAIE,GAAG,KAAK,CAAZ,CAAA,EAAgB;AAEhBF,IAAAA,sBAAsB,CAAtBA,OAAAA,CAAAA,MAAAA,CAAAA,GAAAA,EAAAA,CAAAA;;AAEA,QAAIA,sBAAsB,CAAtBA,OAAAA,CAAAA,MAAAA,IAAAA,CAAAA,IAA8CnD,OAAO,CAAzD,OAAA,EAAmE;AACjEqC,MAAAA,IAAI,KAAJA,IAAAA,IAAAA,IAAI,KAAA,KAAJA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,EAAJA;AACD;AAVc,GAAA,EAYjB,CAAA,IAAA,EAAA,OAAA,EAZF,sBAYE,CAZiB,CAAnB;AAeA,MAAMiB,QAAQ,GAAG,WAAA,CACf,UAAA,OAAA,EAAA;AACEH,IAAAA,sBAAsB,CAAtBA,OAAAA,CAAAA,IAAAA,CAAAA,OAAAA;AACA,WAAO,YAAA;AAAA,aAAMC,UAAU,CAAhB,OAAgB,CAAhB;AAAP,KAAA;AAHa,GAAA,EAKf,CAAA,sBAAA,EALF,UAKE,CALe,CAAjB;AAQA,SAAO,OAAA,CACL,YAAA;AAAA,WAAO;AACLG,MAAAA,QAAQ,EADH,sBAAA;AAELD,MAAAA,QAAQ,EAFH,QAAA;AAGLF,MAAAA,UAAU,EAAVA;AAHK,KAAP;AADK,GAAA,EAML,CAAA,QAAA,EAAA,UAAA,EANF,sBAME,CANK,CAAP;AAQD;;AAED,SAAA,eAAA,CAAA,KAAA,EAAA;MACUG,QAAAA,GAA4EQ,KAAAA,CAA5ER,Q;MAAUC,KAAAA,GAAkEO,KAAAA,CAAlEP,K;MAAOC,SAAAA,GAA2DM,KAAAA,CAA3DN,S;MAAWC,OAAAA,GAAgDK,KAAAA,CAAhDL,O;MAASC,KAAAA,GAAuCI,KAAAA,CAAvCJ,K;MAAOC,SAAAA,GAAgCG,KAAAA,CAAhCH,S;MAAWC,OAAAA,GAAqBE,KAAAA,CAArBF,O;MAAYC,IAAAA,GAAAA,6BAAAA,CAASC,KAATD,EAASC,CAAAA,UAAAA,EAAAA,OAAAA,EAAAA,WAAAA,EAAAA,SAAAA,EAAAA,OAAAA,EAAAA,WAAAA,EAAAA,SAAAA,CAATD,C;;AAC3E,MAAME,SAAS,GAAGpE,MAAAA,CAAlB,IAAkBA,CAAlB;;wBAC0BA,QAAAA,CAAeoD,UAAU,CAAzBpD,OAAAA,C;MAAnBc,KAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;MAAOuD,QAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;;8BAEWG,oBAAoB,E;MAArCF,IAAAA,GAAAA,qBAAAA,CAAAA,I;MAAMC,MAAAA,GAAAA,qBAAAA,CAAAA,M;;0BACmBE,gBAAgB,E;MAAzCf,QAAAA,GAAAA,iBAAAA,CAAAA,Q;MAAUF,UAAAA,GAAAA,iBAAAA,CAAAA,U;;AAElB,MAAMtD,OAAO,GAAGD,kBAAhB,EAAA;AACA,MAAMH,EAAE,GAAGC,KAAX,EAAA;AAEA,MAAM2E,eAAe,GAAG1E,MAAAA,CAAxB,KAAwBA,CAAxB;AAEA,MAAM2E,OAAO,GAAGC,UAAU,CACxB,WAAA,CAAkB,YAAA;AAChB;AACA;AACA,QAAI,CAACF,eAAe,CAApB,OAAA,EAA8B;AAC5BL,MAAAA,QAAQ,CAACjB,UAAU,CAAnBiB,MAAQ,CAARA;AACAb,MAAAA,UAAU,CAAVA,EAAU,CAAVA;AACD;AANH,GAAA,EAOG,CAAA,EAAA,EAAA,UAAA,EARL,eAQK,CAPH,CADwB,CAA1B;AAWAnD,EAAAA,mBAAmB,CAAC,YAAA;AAAA,WAAMqD,QAAQ,CAAd,EAAc,CAAd;AAAD,GAAA,EAAqB,CAAA,QAAA,EAAxCrD,EAAwC,CAArB,CAAnBA;AAEA,MAAMwE,YAAY,GAAGC,eAAe,CAApC,KAAoC,CAApC;AACA,MAAMC,gBAAgB,GAAGD,eAAe,CAAxC,SAAwC,CAAxC;AACA,MAAME,cAAc,GAAGF,eAAe,CAAtC,OAAsC,CAAtC;AAEA,MAAMG,YAAY,GAAGH,eAAe,CAApC,KAAoC,CAApC;AACA,MAAMI,gBAAgB,GAAGJ,eAAe,CAAxC,SAAwC,CAAxC;AACA,MAAMK,cAAc,GAAGL,eAAe,CAAtC,OAAsC,CAAtC;AAEA9E,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAIc,KAAK,KAAKsC,UAAU,CAApBtC,OAAAA,IAAgCsD,SAAS,CAATA,OAAAA,KAApC,IAAA,EAAgE;AAC9D,YAAM,IAAA,KAAA,CAAN,iEAAM,CAAN;AACD;AAHHpE,GAAAA,EAIG,CAAA,SAAA,EAJHA,KAIG,CAJHA,CAAAA;AAMAK,EAAAA,mBAAmB,CAAC,YAAA;AAClB,QAAMwB,IAAI,GAAGuC,SAAS,CAAtB,OAAA;AAEA,QAAI,CAAJ,IAAA,EAAW,OAHO,CAGP;;AAGX,QAAIlE,OAAO,IAAI,CAAf,MAAA,EAAwB;AAExBwE,IAAAA,eAAe,CAAfA,OAAAA,GAAAA,IAAAA;AAEA,WAAOJ,IAAI,GACP5B,UAAU,CAAA,IAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,cAAA,EAAuD,YAAA;AAC/DgC,MAAAA,eAAe,CAAfA,OAAAA,GAAAA,KAAAA;AAFK,KACG,CADH,GAIPhC,UAAU,CAAA,IAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,cAAA,EAAuD,UAAA,MAAA,EAAM;AACrEgC,MAAAA,eAAe,CAAfA,OAAAA,GAAAA,KAAAA;AAEA,UAAIU,MAAM,KAAKtD,MAAM,CAArB,QAAA,EAAgC,OAHqC,CAGrC;AAGhC;;AACA,UAAI6C,OAAO,CAAPA,QAAAA,CAAAA,OAAAA,CAAAA,MAAAA,IAAJ,CAAA,EAA0C;AACxCN,QAAAA,QAAQ,CAACjB,UAAU,CAAnBiB,MAAQ,CAARA;AACAb,QAAAA,UAAU,CAAVA,EAAU,CAAVA;AACD;AAdP,KAIc,CAJd;AAViB,GAAA,EA0BhB,CAAA,EAAA,EAAA,eAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,EAAA,IAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,YAAA,EAAA,gBAAA,EA1BHnD,cA0BG,CA1BgB,CAAnBA,CAxCF,CAwCEA;;AA4CA,MAAIS,KAAK,KAAKsC,UAAU,CAAxB,MAAA,EAAiC,OAAA,IAAA;;AAEjC,MAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AAClC,WACE,aAAA,CAACE,cAAc,CAAf,QAAA,EAAA;AAAyB/C,MAAAA,KAAK,EAAEoE;AAAhC,KAAA,EACIhB,QAA6C,CAFnD,SAEmD,CADjD,CADF;AAKD;;iBAEsDO,IAAAA,CAA/CmB,E;MAAIC,SAAAA,GAAAA,QAAAA,KAAAA,KAAAA,CAAAA,GAAY,KAAZA,GAAY,Q;MAAUC,gBAAAA,GAAAA,6BAAAA,CAAqBrB,IAArBqB,EAAqBrB,CAAAA,IAAAA,CAArBqB,C;;AAClC,SACE,aAAA,CAACjC,cAAc,CAAf,QAAA,EAAA;AAAyB/C,IAAAA,KAAK,EAAEoE;AAAhC,GAAA,EAEE,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAeY,gBAAf,EAAeA;AAAkBC,IAAAA,GAAG,EAAEpB;AAAvBmB,GAAf,CAAA,EAHJ,QAGI,CAFF,CADF;AAQD;;AAED,SAAgBE,UAAhB,CACEtB,KADF,EACEA;;;MAEQG,IAAAA,GAAkCH,KAAAA,CAAlCG,I;sBAAkCH,KAAAA,CAA5BI,M;MAAAA,MAAAA,GAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAS,KAATA,GAAS,a;MAAUL,IAAAA,GAAAA,6BAAAA,CAASC,KAATD,EAASC,CAAAA,MAAAA,EAAAA,QAAAA,CAATD,C;;AAEjC,MAAI,CAAC,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,CAAL,IAAK,CAAL,EAAmC;AACjC,UAAM,IAAA,KAAA,CAAN,0EAAM,CAAN;AACD;;yBAEyBlE,QAAAA,CAAesE,IAAI,GAAGlB,UAAU,CAAb,OAAA,GAAwBA,UAAU,CAArDpD,MAAAA,C;MAAnBc,KAAAA,GAAAA,gBAAAA,CAAAA,CAAAA,C;MAAOuD,QAAAA,GAAAA,gBAAAA,CAAAA,CAAAA,C;;AAEd,MAAMqB,UAAU,GAAGd,UAAU,CAC3B,WAAA,CAAkB,YAAA;AAChBP,IAAAA,QAAQ,CAACjB,UAAU,CAAnBiB,MAAQ,CAARA;AADF,GAAA,EADF,EACE,CAD2B,CAA7B;AAMA,MAAMnE,OAAO,GAAGD,kBAAhB,EAAA;AACA,MAAM0F,aAAa,GAAG,OAAA,CACpB,YAAA;AAAA,WAAO;AAAErB,MAAAA,IAAI,EAAN,IAAA;AAAQC,MAAAA,MAAM,EAAEA,MAAM,IAAI,CAACrE;AAA3B,KAAP;AADoB,GAAA,EAEpB,CAAA,IAAA,EAAA,MAAA,EAFF,OAEE,CAFoB,CAAtB;AAKAF,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAA,IAAA,EAAU;AACRqE,MAAAA,QAAQ,CAACjB,UAAU,CAAnBiB,OAAQ,CAARA;AADF,KAAA,MAEO,IAAIqB,UAAU,CAAVA,QAAAA,CAAAA,OAAAA,CAAAA,MAAAA,IAAJ,CAAA,EAA6C;AAClDrB,MAAAA,QAAQ,CAACjB,UAAU,CAAnBiB,MAAQ,CAARA;AACD;AALHrE,GAAAA,EAMG,CAAA,IAAA,EANHA,UAMG,CANHA,CAAAA;AAQA,SACE,aAAA,CAACsD,cAAc,CAAf,QAAA,EAAA;AAAyB/C,IAAAA,KAAK,EAAEmF;AAAhC,GAAA,EACE,aAAA,CAACvC,iBAAiB,CAAlB,QAAA,EAAA;AAA4B5C,IAAAA,KAAK,EAAEoF;AAAnC,GAAA,EACGrF,KAAK,CAAA,KAAA,GAAA,MAAA,GAAA,EAAA,EAAA,MAAA,CACH8C,UAAU,CADP,OAAA,CAAA,GACkB,YAAA;AAAA,WAAMpD,aAAAA,CAAAA,eAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAN,IAAMA,CAAAA,CAAN;AADlB,GAAA,EAAA,MAAA,CAEHoD,UAAU,CAFP,MAAA,CAAA,GAAA,IAAA,EAHZ,MAGY,EADR,CADF,CADF;AAUD;;AAEDqC,UAAU,CAAVA,KAAAA,GAAAA,eAAAA","sourcesContent":["import * as React from 'react'\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  const [id] = React.useState(generateId)\n  return id\n}\n","import * as React from 'react'\n\nexport function useIsInitialRender() {\n  const initial = React.useRef(true)\n\n  React.useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","import * as React from 'react'\n\nexport function useIsMounted() {\n  const mounted = React.useRef(true)\n\n  React.useEffect(() => {\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","import * as React from 'react'\n\nexport const useIsoMorphicEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | (() => TReturnValue)>\n): TReturnValue {\n  if (value in lookup) {\n    const returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue() : returnValue\n  }\n\n  const error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, match)\n  }\n\n  throw error\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  const state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) {\n      return\n    }\n    state.called = true\n    return cb(...args)\n  }\n}\n","type ArgumentsOf<F extends Function> = F extends (...args: infer A) => any ? A : never\n\nexport function disposables() {\n  const disposables: Function[] = []\n\n  const api = {\n    requestAnimationFrame(...args: ArgumentsOf<typeof requestAnimationFrame>) {\n      const raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: ArgumentsOf<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: ArgumentsOf<typeof setTimeout>) {\n      const timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      disposables.splice(0).forEach(dispose => dispose())\n    },\n  }\n\n  return api\n}\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  const d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  const { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  const [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    const [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  done?: (reason: Reason) => void\n) {\n  const d = disposables()\n  const _done = done !== undefined ? once(done) : () => {}\n\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import * as React from 'react'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { match } from '../../utils/match'\nimport { Reason, transition } from './utils/transition'\n\ntype ID = number\n\nfunction useSplitClasses(classes: string = '') {\n  return React.useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ntype TransitionContextValues = {\n  show: boolean\n  appear: boolean\n} | null\nconst TransitionContext = React.createContext<TransitionContextValues>(null)\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\ntype TransitionClasses = Partial<{\n  enter: string\n  enterFrom: string\n  enterTo: string\n  leave: string\n  leaveFrom: string\n  leaveTo: string\n}>\n\ntype HTMlTags = keyof JSX.IntrinsicElements\ntype HTMLTagProps<TTag extends HTMlTags> = JSX.IntrinsicElements[TTag]\n\ntype AsShortcut<TTag extends HTMlTags> = {\n  children: React.ReactNode\n  as?: TTag\n} & Omit<HTMLTagProps<TTag>, 'ref'>\n\ntype AsRenderPropFunction = {\n  children: (ref: React.MutableRefObject<any>) => JSX.Element\n}\n\ntype BaseConfig = Partial<{ appear: boolean }>\n\ntype TransitionChildProps<TTag extends HTMlTags> = BaseConfig &\n  (AsShortcut<TTag> | AsRenderPropFunction) &\n  TransitionClasses\n\nfunction useTransitionContext() {\n  const context = React.useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  const context = React.useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.')\n  }\n\n  return context\n}\n\ntype NestingContextValues = {\n  children: React.MutableRefObject<ID[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID) => void\n}\n\nconst NestingContext = React.createContext<NestingContextValues | null>(null)\n\nfunction useNesting(done?: () => void) {\n  const transitionableChildren = React.useRef<ID[]>([])\n  const mounted = useIsMounted()\n\n  const unregister = React.useCallback(\n    (childId: ID) => {\n      const idx = transitionableChildren.current.indexOf(childId)\n\n      if (idx === -1) return\n\n      transitionableChildren.current.splice(idx, 1)\n\n      if (transitionableChildren.current.length <= 0 && mounted.current) {\n        done?.()\n      }\n    },\n    [done, mounted, transitionableChildren]\n  )\n\n  const register = React.useCallback(\n    (childId: ID) => {\n      transitionableChildren.current.push(childId)\n      return () => unregister(childId)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return React.useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction TransitionChild<TTag extends HTMlTags = 'div'>(props: TransitionChildProps<TTag>) {\n  const { children, enter, enterFrom, enterTo, leave, leaveFrom, leaveTo, ...rest } = props\n  const container = React.useRef<HTMLElement | null>(null)\n  const [state, setState] = React.useState(TreeStates.Visible)\n\n  const { show, appear } = useTransitionContext()\n  const { register, unregister } = useParentNesting()\n\n  const initial = useIsInitialRender()\n  const id = useId()\n\n  const isTransitioning = React.useRef(false)\n\n  const nesting = useNesting(\n    React.useCallback(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourserlves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.current) {\n        setState(TreeStates.Hidden)\n        unregister(id)\n      }\n    }, [id, unregister, isTransitioning])\n  )\n\n  useIsoMorphicEffect(() => register(id), [register, id])\n\n  const enterClasses = useSplitClasses(enter)\n  const enterFromClasses = useSplitClasses(enterFrom)\n  const enterToClasses = useSplitClasses(enterTo)\n\n  const leaveClasses = useSplitClasses(leave)\n  const leaveFromClasses = useSplitClasses(leaveFrom)\n  const leaveToClasses = useSplitClasses(leaveTo)\n\n  React.useEffect(() => {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state])\n\n  useIsoMorphicEffect(() => {\n    const node = container.current\n\n    if (!node) return\n\n    // Skipping initial transition\n    if (initial && !appear) return\n\n    isTransitioning.current = true\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, () => {\n          isTransitioning.current = false\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (nesting.children.current.length <= 0) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n          }\n        })\n  }, [\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    initial,\n    appear,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  // Unmount the whole tree\n  if (state === TreeStates.Hidden) return null\n\n  if (typeof children === 'function') {\n    return (\n      <NestingContext.Provider value={nesting}>\n        {(children as AsRenderPropFunction['children'])(container)}\n      </NestingContext.Provider>\n    )\n  }\n\n  const { as: Component = 'div', ...passthroughProps } = rest as AsShortcut<TTag>\n  return (\n    <NestingContext.Provider value={nesting}>\n      {/* @ts-expect-error Expression produces a union type that is too complex to represent. */}\n      <Component {...passthroughProps} ref={container}>\n        {children}\n      </Component>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends HTMlTags = 'div'>(\n  props: TransitionChildProps<TTag> & { show: boolean; appear?: boolean }\n) {\n  const { show, appear = false, ...rest } = props\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  const [state, setState] = React.useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  const nestingBag = useNesting(\n    React.useCallback(() => {\n      setState(TreeStates.Hidden)\n    }, [])\n  )\n\n  const initial = useIsInitialRender()\n  const transitionBag = React.useMemo<TransitionContextValues>(\n    () => ({ show, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  React.useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (nestingBag.children.current.length <= 0) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {match(state, {\n          [TreeStates.Visible]: () => <TransitionChild {...rest} />,\n          [TreeStates.Hidden]: null,\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = TransitionChild\n"]},"metadata":{},"sourceType":"module"}