{"ast":null,"code":"import { takeEvery, call, put, all } from \"redux-saga/effects\";\nimport history from \"../../routes/history\";\nimport { AUTH } from \"../types\";\nimport * as service from \"../services/userService\";\nimport * as actions from \"../actions/userActions\";\nimport * as alert from \"../actions/alertActions\";\n\nfunction* login() {\n  try {\n    var _result$additionalUse;\n\n    const result = yield call(service.login);\n    const user = result.user;\n    yield put(actions.userLoggedIn(user));\n    yield put(alert.setAlertAction({\n      text: \"User Logged In!\",\n      text_color: \"bg-blue-100\",\n      bg_color: \"text-blue-700\"\n    }));\n\n    if (result === null || result === void 0 ? void 0 : (_result$additionalUse = result.additionalUserInfo) === null || _result$additionalUse === void 0 ? void 0 : _result$additionalUse.isNewUser) {\n      console.log(\"new user\");\n      console.log(history);\n      history.push(\"/register\");\n    } else {\n      history.push(\"/\");\n    }\n  } catch (e) {\n    yield put(alert.setAlertAction({\n      text: e.msg,\n      text_color: \"bg-blue-100\",\n      bg_color: \"text-blue-700\"\n    }));\n    console.log(e);\n  }\n}\n\nfunction* logout() {\n  yield call(service.logout);\n  yield put(actions.userLoggedOutAction());\n  history.push(\"/\");\n}\n\nfunction* watchLoginUser() {\n  yield takeEvery(AUTH.LOGIN_USER, login);\n}\n\nfunction* watchLogoutUser() {\n  yield takeEvery(AUTH.LOGOUT_USER, logout);\n}\n\nexport function* userSaga() {\n  yield all([watchLoginUser(), watchLogoutUser()]);\n}","map":{"version":3,"sources":["D:/Projects/Aucti/aucti-web/src/redux/saga/userSaga.js"],"names":["takeEvery","call","put","all","history","AUTH","service","actions","alert","login","result","user","userLoggedIn","setAlertAction","text","text_color","bg_color","additionalUserInfo","isNewUser","console","log","push","e","msg","logout","userLoggedOutAction","watchLoginUser","LOGIN_USER","watchLogoutUser","LOGOUT_USER","userSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,oBAA1C;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,yBAAvB;;AAEA,UAAUC,KAAV,GAAkB;AACjB,MAAI;AAAA;;AACH,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACK,OAAO,CAACG,KAAT,CAAzB;AACA,UAAME,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAMT,GAAG,CAACK,OAAO,CAACK,YAAR,CAAqBD,IAArB,CAAD,CAAT;AACA,UAAMT,GAAG,CACRM,KAAK,CAACK,cAAN,CAAqB;AACpBC,MAAAA,IAAI,EAAE,iBADc;AAEpBC,MAAAA,UAAU,EAAE,aAFQ;AAGpBC,MAAAA,QAAQ,EAAE;AAHU,KAArB,CADQ,CAAT;;AAQA,QAAIN,MAAJ,aAAIA,MAAJ,gDAAIA,MAAM,CAAEO,kBAAZ,0DAAI,sBAA4BC,SAAhC,EAA2C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACAA,MAAAA,OAAO,CAACiB,IAAR,CAAa,WAAb;AACA,KAJD,MAIO;AACNjB,MAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACA;AACD,GAnBD,CAmBE,OAAOC,CAAP,EAAU;AACX,UAAMpB,GAAG,CACRM,KAAK,CAACK,cAAN,CAAqB;AACpBC,MAAAA,IAAI,EAAEQ,CAAC,CAACC,GADY;AAEpBR,MAAAA,UAAU,EAAE,aAFQ;AAGpBC,MAAAA,QAAQ,EAAE;AAHU,KAArB,CADQ,CAAT;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA;AACD;;AAED,UAAUE,MAAV,GAAmB;AAClB,QAAMvB,IAAI,CAACK,OAAO,CAACkB,MAAT,CAAV;AACA,QAAMtB,GAAG,CAACK,OAAO,CAACkB,mBAAR,EAAD,CAAT;AACArB,EAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACA;;AAED,UAAUK,cAAV,GAA2B;AAC1B,QAAM1B,SAAS,CAACK,IAAI,CAACsB,UAAN,EAAkBlB,KAAlB,CAAf;AACA;;AAED,UAAUmB,eAAV,GAA4B;AAC3B,QAAM5B,SAAS,CAACK,IAAI,CAACwB,WAAN,EAAmBL,MAAnB,CAAf;AACA;;AAED,OAAO,UAAUM,QAAV,GAAqB;AAC3B,QAAM3B,GAAG,CAAC,CAACuB,cAAc,EAAf,EAAmBE,eAAe,EAAlC,CAAD,CAAT;AACA","sourcesContent":["import { takeEvery, call, put, all } from \"redux-saga/effects\";\r\n\r\nimport history from \"../../routes/history\";\r\n\r\nimport { AUTH } from \"../types\";\r\nimport * as service from \"../services/userService\";\r\nimport * as actions from \"../actions/userActions\";\r\nimport * as alert from \"../actions/alertActions\";\r\n\r\nfunction* login() {\r\n\ttry {\r\n\t\tconst result = yield call(service.login);\r\n\t\tconst user = result.user;\r\n\t\tyield put(actions.userLoggedIn(user));\r\n\t\tyield put(\r\n\t\t\talert.setAlertAction({\r\n\t\t\t\ttext: \"User Logged In!\",\r\n\t\t\t\ttext_color: \"bg-blue-100\",\r\n\t\t\t\tbg_color: \"text-blue-700\",\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif (result?.additionalUserInfo?.isNewUser) {\r\n\t\t\tconsole.log(\"new user\");\r\n\t\t\tconsole.log(history);\r\n\t\t\thistory.push(\"/register\");\r\n\t\t} else {\r\n\t\t\thistory.push(\"/\");\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tyield put(\r\n\t\t\talert.setAlertAction({\r\n\t\t\t\ttext: e.msg,\r\n\t\t\t\ttext_color: \"bg-blue-100\",\r\n\t\t\t\tbg_color: \"text-blue-700\",\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log(e);\r\n\t}\r\n}\r\n\r\nfunction* logout() {\r\n\tyield call(service.logout);\r\n\tyield put(actions.userLoggedOutAction());\r\n\thistory.push(\"/\");\r\n}\r\n\r\nfunction* watchLoginUser() {\r\n\tyield takeEvery(AUTH.LOGIN_USER, login);\r\n}\r\n\r\nfunction* watchLogoutUser() {\r\n\tyield takeEvery(AUTH.LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* userSaga() {\r\n\tyield all([watchLoginUser(), watchLogoutUser()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}