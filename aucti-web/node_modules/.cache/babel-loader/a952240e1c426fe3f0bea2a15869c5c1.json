{"ast":null,"code":"import{firebase,auth}from\"../../config/firebase\";export var login=function login(){return new Promise(function(resolve,reject){var provider=new firebase.auth.GoogleAuthProvider();firebase.auth().signInWithPopup(provider).then(function(result){/** @type {firebase.auth.OAuthCredential} */var credential=result.credential;// This gives you a Google Access Token. You can use it to access the Google API.\nvar token=credential.accessToken;// The signed-in user info.\nvar user=result.user;var userData={user:user,token:token};localStorage.setItem(\"user\",JSON.stringify(userData));resolve(result);}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The firebase.auth.AuthCredential type that was used.\nvar credential=error.credential;// ...\nconsole.log(errorMessage);reject(errorMessage);});});};export var logout=function logout(){localStorage.removeItem(\"user\");auth.signOut();};export var checkUser=function checkUser(){return JSON.parse(localStorage.getItem(\"user\"));};","map":{"version":3,"sources":["D:/Projects/Aucti/aucti-web/src/redux/services/userService.js"],"names":["firebase","auth","login","Promise","resolve","reject","provider","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","user","userData","localStorage","setItem","JSON","stringify","catch","error","errorCode","code","errorMessage","message","email","console","log","logout","removeItem","signOut","checkUser","parse","getItem"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,IAAnB,KAA+B,uBAA/B,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAC1B,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACvC,GAAMC,CAAAA,QAAQ,CAAG,GAAIN,CAAAA,QAAQ,CAACC,IAAT,CAAcM,kBAAlB,EAAjB,CACAP,QAAQ,CACNC,IADF,GAEEO,eAFF,CAEkBF,QAFlB,EAGEG,IAHF,CAGO,SAACC,MAAD,CAAY,CACjB,4CACA,GAAIC,CAAAA,UAAU,CAAGD,MAAM,CAACC,UAAxB,CACA;AACA,GAAIC,CAAAA,KAAK,CAAGD,UAAU,CAACE,WAAvB,CACA;AACA,GAAIC,CAAAA,IAAI,CAAGJ,MAAM,CAACI,IAAlB,CACA,GAAMC,CAAAA,QAAQ,CAAG,CAChBD,IAAI,CAAJA,IADgB,CAEhBF,KAAK,CAALA,KAFgB,CAAjB,CAIAI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA7B,EAEAX,OAAO,CAACM,MAAD,CAAP,CACA,CAjBF,EAkBEU,KAlBF,CAkBQ,SAACC,KAAD,CAAW,CACjB;AACA,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAtB,CACA,GAAIC,CAAAA,YAAY,CAAGH,KAAK,CAACI,OAAzB,CACA;AACA,GAAIC,CAAAA,KAAK,CAAGL,KAAK,CAACK,KAAlB,CACA;AACA,GAAIf,CAAAA,UAAU,CAAGU,KAAK,CAACV,UAAvB,CACA;AACAgB,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAEAnB,MAAM,CAACmB,YAAD,CAAN,CACA,CA9BF,EA+BA,CAjCM,CAAP,CAkCA,CAnCM,CAqCP,MAAO,IAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAC3Bb,YAAY,CAACc,UAAb,CAAwB,MAAxB,EACA7B,IAAI,CAAC8B,OAAL,GACA,CAHM,CAKP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC9B,MAAOd,CAAAA,IAAI,CAACe,KAAL,CAAWjB,YAAY,CAACkB,OAAb,CAAqB,MAArB,CAAX,CAAP,CACA,CAFM","sourcesContent":["import { firebase, auth } from \"../../config/firebase\";\r\n\r\nexport const login = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithPopup(provider)\r\n\t\t\t.then((result) => {\r\n\t\t\t\t/** @type {firebase.auth.OAuthCredential} */\r\n\t\t\t\tvar credential = result.credential;\r\n\t\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\r\n\t\t\t\tvar token = credential.accessToken;\r\n\t\t\t\t// The signed-in user info.\r\n\t\t\t\tvar user = result.user;\r\n\t\t\t\tconst userData = {\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\ttoken,\r\n\t\t\t\t};\r\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(userData));\r\n\r\n\t\t\t\tresolve(result);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\t// Handle Errors here.\r\n\t\t\t\tvar errorCode = error.code;\r\n\t\t\t\tvar errorMessage = error.message;\r\n\t\t\t\t// The email of the user's account used.\r\n\t\t\t\tvar email = error.email;\r\n\t\t\t\t// The firebase.auth.AuthCredential type that was used.\r\n\t\t\t\tvar credential = error.credential;\r\n\t\t\t\t// ...\r\n\t\t\t\tconsole.log(errorMessage);\r\n\r\n\t\t\t\treject(errorMessage);\r\n\t\t\t});\r\n\t});\r\n};\r\n\r\nexport const logout = () => {\r\n\tlocalStorage.removeItem(\"user\");\r\n\tauth.signOut();\r\n};\r\n\r\nexport const checkUser = () => {\r\n\treturn JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}