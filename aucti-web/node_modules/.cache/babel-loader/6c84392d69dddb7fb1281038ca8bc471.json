{"ast":null,"code":"import { takeEvery, call, put, all } from \"redux-saga/effects\";\nimport * as service from \"../services/bidService\";\nimport * as actions from \"../actions/bidActions\";\nimport { BID } from \"../types\"; //Worker Sagas\n\nfunction* loadBids() {\n  try {\n    const bids = yield call(service.getBids);\n    yield put(actions.bidLoadedAction(bids));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* loadBuyerBids() {\n  try {\n    const BuyerBids = yield call(service.getByerBids);\n    yield put(actions.buyerBidLoadedAction(BuyerBids));\n  } catch (e) {\n    console.log(e);\n  }\n} //Watcher Sagas\n\n\nfunction* watchLoadBids() {\n  yield takeEvery(BID.LOAD_BIDS, loadBids);\n}\n\nfunction* watchLoadBuyerBids() {\n  yield takeEvery(BID.LOAD_BUYER_BIDS, loadBuyerBids);\n}\n\nexport function* bidSaga() {\n  yield all([watchLoadBids(), watchLoadBuyerBids()]);\n}","map":{"version":3,"sources":["D:/Projects/Aucti/aucti-web/src/redux/saga/bidSaga.js"],"names":["takeEvery","call","put","all","service","actions","BID","loadBids","bids","getBids","bidLoadedAction","e","console","log","loadBuyerBids","BuyerBids","getByerBids","buyerBidLoadedAction","watchLoadBids","LOAD_BIDS","watchLoadBuyerBids","LOAD_BUYER_BIDS","bidSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,oBAA1C;AAEA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,SAASC,GAAT,QAAoB,UAApB,C,CAEA;;AACA,UAAUC,QAAV,GAAqB;AACpB,MAAI;AACH,UAAMC,IAAI,GAAG,MAAMP,IAAI,CAACG,OAAO,CAACK,OAAT,CAAvB;AACA,UAAMP,GAAG,CAACG,OAAO,CAACK,eAAR,CAAwBF,IAAxB,CAAD,CAAT;AACA,GAHD,CAGE,OAAOG,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;AACD;;AACD,UAAUG,aAAV,GAA0B;AACzB,MAAI;AACH,UAAMC,SAAS,GAAG,MAAMd,IAAI,CAACG,OAAO,CAACY,WAAT,CAA5B;AACA,UAAMd,GAAG,CAACG,OAAO,CAACY,oBAAR,CAA6BF,SAA7B,CAAD,CAAT;AACA,GAHD,CAGE,OAAOJ,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;AACD,C,CAED;;;AACA,UAAUO,aAAV,GAA0B;AACzB,QAAMlB,SAAS,CAACM,GAAG,CAACa,SAAL,EAAgBZ,QAAhB,CAAf;AACA;;AAED,UAAUa,kBAAV,GAA+B;AAC9B,QAAMpB,SAAS,CAACM,GAAG,CAACe,eAAL,EAAsBP,aAAtB,CAAf;AACA;;AAED,OAAO,UAAUQ,OAAV,GAAoB;AAC1B,QAAMnB,GAAG,CAAC,CAACe,aAAa,EAAd,EAAkBE,kBAAkB,EAApC,CAAD,CAAT;AACA","sourcesContent":["import { takeEvery, call, put, all } from \"redux-saga/effects\";\r\n\r\nimport * as service from \"../services/bidService\";\r\nimport * as actions from \"../actions/bidActions\";\r\n\r\nimport { BID } from \"../types\";\r\n\r\n//Worker Sagas\r\nfunction* loadBids() {\r\n\ttry {\r\n\t\tconst bids = yield call(service.getBids);\r\n\t\tyield put(actions.bidLoadedAction(bids));\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n}\r\nfunction* loadBuyerBids() {\r\n\ttry {\r\n\t\tconst BuyerBids = yield call(service.getByerBids);\r\n\t\tyield put(actions.buyerBidLoadedAction(BuyerBids));\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n}\r\n\r\n//Watcher Sagas\r\nfunction* watchLoadBids() {\r\n\tyield takeEvery(BID.LOAD_BIDS, loadBids);\r\n}\r\n\r\nfunction* watchLoadBuyerBids() {\r\n\tyield takeEvery(BID.LOAD_BUYER_BIDS, loadBuyerBids);\r\n}\r\n\r\nexport function* bidSaga() {\r\n\tyield all([watchLoadBids(), watchLoadBuyerBids()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}